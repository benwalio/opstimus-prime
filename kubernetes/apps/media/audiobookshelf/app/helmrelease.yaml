---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: audiobookshelf
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      app:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 100
            fsGroup: 100
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.28.0@sha256:b854ec08b1a7bee67c3274f1df5dce2143f48e05cbce5ada356c38662694f7fe
            env:
              TZ: "${TZ}"
              AUDIOBOOKSHELF_UID: 1001
              AUDIOBOOKSHELF_GID: 100
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 500Mi
    service:
      app:
        primary: true
        controller: app
        ports:
          http:
            port: *port

    ingress:
      app:
        className: external
        annotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
          nginx.ingress.kubernetes.io/proxy-body-size: 1024m
          nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding off;

          ## homepage
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Audiobook management
          gethomepage.dev/group: media
          gethomepage.dev/icon: sh-audiobookshelf.svg
          gethomepage.dev/name: audiobookshelf

        hosts:
          - host: &host audiobookshelf.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: server
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        suffix: config
        storageClass: "ceph-block"
        accessMode: ReadWriteOnce
        size: "1Gi"
        globalMounts:
          - path: /config

      cache:
        type: emptyDir
        globalMounts:
          - path: /.npm

      media:
        type: nfs
        server: ${SECRET_NFS_SERVER}
        path: ${SECRET_NFS_MOUNT_MEDIA}
        globalMounts:
          - path: /mnt/media

      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
