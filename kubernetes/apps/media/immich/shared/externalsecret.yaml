---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name immich
spec:
  target:
    name: immich-secret
    template:
      engineVersion: v2
      data:
        # REDIS_DBINDEX: "{{ .DF_REDIS_IMMICH_DB }}"
        JWT_SECRET: "{{ .IMMICH_JWT_SECRET }}"

        DB_HOSTNAME: &dbhost immich-rw.media.svc.cluster.local
        DB_PORT: &dbport "{{ .PG_PORT }}"
        DB_USERNAME: &dbuser "{{ .IMMICH_PG_USER }}"
        DB_PASSWORD: &dbpass "{{ .IMMICH_PG_PASS }}"
        DB_DATABASE_NAME: &dbname "{{ .IMMICH_PG_DB }}"

        username: &dbsuperuser "{{ .POSTGRES_SUPER_USER }}"
        password: &dbsuperpass "{{ .POSTGRES_SUPER_PASS }}"
        POSTGRES_SUPER_USER: *dbsuperuser
        POSTGRES_SUPER_PASS: *dbsuperpass

        # Postgres Init
        INIT_POSTGRES_DBNAME: *dbname
        INIT_POSTGRES_HOST: *dbhost
        INIT_POSTGRES_USER: *dbuser
        INIT_POSTGRES_PASS: *dbpass
        INIT_POSTGRES_USER_FLAGS: "-s"
        INIT_POSTGRES_SUPER_USER: *dbsuperuser
        INIT_POSTGRES_SUPER_PASS: *dbsuperpass

        # DB_HOSTNAME: '{{ index . "host" }}'
        # DB_PORT: '{{ index . "port" }}'
        # DB_USERNAME: '{{ index . "user" }}'
        # DB_PASSWORD: '{{ index . "password" }}'
        # DB_DATABASE_NAME: '{{ index . "dbname" }}'
        # DB_URL: '{{ index . "uri" }}'
  dataFrom:
    - extract:
        key: immich
      sourceRef:
        storeRef:
          kind: ClusterSecretStore
          name: onepassword
    - extract:
        key: cloudnative-pg
      sourceRef:
        storeRef:
          kind: ClusterSecretStore
          name: onepassword
    # - extract:
    #     key: dragonfly
    #   sourceRef:
    #     storeRef:
    #       kind: ClusterSecretStore
    #       name: onepassword
    # - extract:
    #     key: crunchy-postgres-vector-pguser-immich
    #   sourceRef:
    #     storeRef:
    #       kind: ClusterSecretStore
    #       name: crunchy-postgres
